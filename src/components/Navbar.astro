---
import { Icon } from "astro-icon/components";

const props = Astro.props;

const navLinks = [
  {
    label: "Home",
    url: "/",
    style: "transparent",
  },
  {
    label: "Pricing",
    url: "/about",
    style: "transparent",
  },
  {
    label: "About",
    url: "/services",
    style: "transparent",
  },
  {
    label: "Contact Me",
    url: "/contact",
    style: "primary",
  },
];
---

<style>
  nav {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 80px;
    background-color: transparent;
    /* box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); */
    z-index: 1000;
  }
  svg.logo {
    width: 225px;
    height: auto;
    margin-left: 20px;
    margin-top: 10px;
  }
</style>

<nav>
  <div class="container navcontainer">
    <!-- Import without using Astro components -->
    <!-- <img src="/logo.svg" alt="Logo" class="logo" width="{225}" /> -->
    <Icon name="logo" class="logo" />
    <div class="nav-wrapper">
      <button
        class="btn -btn--menu"
        id="menu-btn"
        aria-label="Menu"
        aria-expanded="false"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          {...props}
        >
          <path
            fill="currentColor"
            d="M4 18q-.425 0-.712-.288T3 17t.288-.712T4 16h16q.425 0 .713.288T21 17t-.288.713T20 18zm0-5q-.425 0-.712-.288T3 12t.288-.712T4 11h16q.425 0 .713.288T21 12t-.288.713T20 13zm0-5q-.425 0-.712-.288T3 7t.288-.712T4 6h16q.425 0 .713.288T21 7t-.288.713T20 8z"
          ></path>
        </svg>
      </button>
      <ul class="nav-links">
        {
          navLinks.map((link) => (
            <li class="nav-links">
              <a href={link.url} class={`btn btn--${link.style}`}>
                {link.label}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</nav>

<script>
  const menuBtn = document.getElementById("menu-btn");
  //   const navLinks = document.querySelectorAll(".nav-links");

  if (menuBtn) {
    menuBtn.addEventListener("click", () => {
      menuBtn.setAttribute(
        "aria-expanded",
        menuBtn.getAttribute("aria-expanded") === "false" ? "true" : "false"
      );
      //   menuBtn.classList.toggle("active");
    });
  }
</script>
